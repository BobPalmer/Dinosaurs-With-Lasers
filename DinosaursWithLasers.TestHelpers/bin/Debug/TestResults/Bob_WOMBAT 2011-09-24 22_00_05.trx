<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="d7d071da-98c3-4e6b-afc8-8882f80ec069" name="Bob@WOMBAT 2011-09-24 22:00:05" runUser="Wombat\Bob" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="3832839d-5ba1-4dfb-ac58-71c3202ca258">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment enabled="false" runDeploymentRoot="Bob_WOMBAT 2011-09-24 22_00_05" />
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2011-09-24T22:00:05.2637406-04:00" queuing="2011-09-24T22:00:05.7005413-04:00" start="2011-09-24T22:00:05.9969419-04:00" finish="2011-09-24T22:00:09.7253484-04:00" />
  <ResultSummary outcome="Completed">
    <Counters total="1" executed="1" passed="1" error="0" failed="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="GenerateSchema" storage="c:\tfs\projects\sandbox\dinosaurswithlasers\dinosaurswithlasers.testhelpers\bin\debug\dinosaurswithlasers.testhelpers.dll" id="d3401100-2e58-ca2c-3bbb-ae8dba5a2f37">
      <Execution timeOut="1800000" id="ee312814-55d1-447b-a19c-59aad4e42d1d" />
      <TestMethod codeBase="C:/TFS/Projects/Sandbox/DinosaursWithLasers/DinosaursWithLasers.TestHelpers/bin/Debug/DinosaursWithLasers.TestHelpers.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="DinosaursWithLasers.TestHelpers.Utilities, DinosaursWithLasers.TestHelpers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="GenerateSchema" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="d3401100-2e58-ca2c-3bbb-ae8dba5a2f37" executionId="ee312814-55d1-447b-a19c-59aad4e42d1d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="ee312814-55d1-447b-a19c-59aad4e42d1d" testId="d3401100-2e58-ca2c-3bbb-ae8dba5a2f37" testName="GenerateSchema" computerName="WOMBAT" duration="00:00:03.5504602" startTime="2011-09-24T22:00:06.0437419-04:00" endTime="2011-09-24T22:00:09.6629483-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ee312814-55d1-447b-a19c-59aad4e42d1d">
      <Output>
        <StdOut>if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK30610BE895245261]') AND parent_object_id = OBJECT_ID('Riders'))
alter table Riders  drop constraint FK30610BE895245261


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKE767E5135CB4BA39]') AND parent_object_id = OBJECT_ID('DinosaurCategories'))
alter table DinosaurCategories  drop constraint FKE767E5135CB4BA39


    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKE767E51395245261]') AND parent_object_id = OBJECT_ID('DinosaurCategories'))
alter table DinosaurCategories  drop constraint FKE767E51395245261


    if exists (select * from dbo.sysobjects where id = object_id(N'Riders') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table Riders

    if exists (select * from dbo.sysobjects where id = object_id(N'Dinosaurs') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table Dinosaurs

    if exists (select * from dbo.sysobjects where id = object_id(N'DinosaurCategories') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table DinosaurCategories

    if exists (select * from dbo.sysobjects where id = object_id(N'Categories') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table Categories

    if exists (select * from dbo.sysobjects where id = object_id(N'hibernate_unique_key') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table hibernate_unique_key

    create table Riders (
        RiderId INT not null,
       Name NVARCHAR(255) null,
       DinosaurId INT null,
       primary key (RiderId)
    )

    create table Dinosaurs (
        DinosaurId INT not null,
       Name NVARCHAR(255) null,
       FigImageUrl NVARCHAR(255) null,
       BoxImageUrl NVARCHAR(255) null,
       ThumbImageUrl NVARCHAR(255) null,
       Description NVARCHAR(255) null,
       primary key (DinosaurId)
    )

    create table DinosaurCategories (
        DinosaurId INT not null,
       CategoryId NVARCHAR(255) not null,
       id INT not null,
       primary key (id)
    )

    create table Categories (
        CategoryId NVARCHAR(255) not null,
       Name NVARCHAR(255) null,
       primary key (CategoryId)
    )

    alter table Riders 
        add constraint FK30610BE895245261 
        foreign key (DinosaurId) 
        references Dinosaurs

    alter table DinosaurCategories 
        add constraint FKE767E5135CB4BA39 
        foreign key (CategoryId) 
        references Categories

    alter table DinosaurCategories 
        add constraint FKE767E51395245261 
        foreign key (DinosaurId) 
        references Dinosaurs

    create table hibernate_unique_key (
         next_hi INT 
    )

    insert into hibernate_unique_key values ( 1 )
NHibernate: SELECT category_.CategoryId, category_.Name as Name7_ FROM Categories category_ WHERE category_.CategoryId=@p0;@p0 = 'S1' [Type: String (4000)]
NHibernate: SELECT category_.CategoryId, category_.Name as Name7_ FROM Categories category_ WHERE category_.CategoryId=@p0;@p0 = 'S2' [Type: String (4000)]
NHibernate: SELECT category_.CategoryId, category_.Name as Name7_ FROM Categories category_ WHERE category_.CategoryId=@p0;@p0 = 'S3' [Type: String (4000)]
NHibernate: SELECT category_.CategoryId, category_.Name as Name7_ FROM Categories category_ WHERE category_.CategoryId=@p0;@p0 = 'ICE' [Type: String (4000)]
NHibernate: SELECT category_.CategoryId, category_.Name as Name7_ FROM Categories category_ WHERE category_.CategoryId=@p0;@p0 = 'VAL' [Type: String (4000)]
NHibernate: SELECT category_.CategoryId, category_.Name as Name7_ FROM Categories category_ WHERE category_.CategoryId=@p0;@p0 = 'RUL' [Type: String (4000)]
NHibernate: SELECT category0_.CategoryId as CategoryId7_0_, category0_.Name as Name7_0_ FROM Categories category0_ WHERE category0_.CategoryId=@p0;@p0 = 'Rul' [Type: String (4000)]
NHibernate: select next_hi from hibernate_unique_key with (updlock, rowlock)
NHibernate: update hibernate_unique_key set next_hi = @p0 where next_hi = @p1;@p0 = 2 [Type: Int32 (0)], @p1 = 1 [Type: Int32 (0)]
NHibernate: select next_hi from hibernate_unique_key with (updlock, rowlock)
NHibernate: update hibernate_unique_key set next_hi = @p0 where next_hi = @p1;@p0 = 3 [Type: Int32 (0)], @p1 = 2 [Type: Int32 (0)]
NHibernate: select next_hi from hibernate_unique_key with (updlock, rowlock)
NHibernate: update hibernate_unique_key set next_hi = @p0 where next_hi = @p1;@p0 = 4 [Type: Int32 (0)], @p1 = 3 [Type: Int32 (0)]
NHibernate: SELECT category0_.CategoryId as CategoryId7_0_, category0_.Name as Name7_0_ FROM Categories category0_ WHERE category0_.CategoryId=@p0;@p0 = 'Val' [Type: String (4000)]</StdOut>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>